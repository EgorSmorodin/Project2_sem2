from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from services.wikidata_client import get_city_wikidata_id
from keyboards.inline import main_menu
from states.user_states import UserStates
from storage.user_data import user_data
from utils.formatters import format_era_name
import logging

router = Router()
logger = logging.getLogger(__name__)


@router.message(F.text == "/start")
async def cmd_start(message: Message, state: FSMContext):
    user_id = message.from_user.id
    city_name = "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"
    city_id = await get_city_wikidata_id(city_name)

    user_data[user_id] = {
        'city': city_name,
        'city_id': city_id,
        'era': 'imperial',
        'shown_events': set()
    }

    await message.answer(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n"
        "–Ø - –±–æ—Ç ¬´–î–Ω–µ–≤–Ω–æ–π –ü–µ—Ç–µ—Ä–±—É—Ä–≥¬ª. –Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ "
        "–∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è.\n\n"
        "–°–µ–π—á–∞—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ:\n"
        f"üìç –ì–æ—Ä–æ–¥: {city_name}\n"
        f"‚è≥ –≠–ø–æ—Ö–∞: {format_era_name('imperial')}",
        reply_markup=main_menu()
    )
    await state.set_state(UserStates.MAIN_MENU)


@router.message(F.text == "/help")
async def cmd_help(message: Message):
    help_text = (
        "‚ÑπÔ∏è –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:\n\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
        "/subscribe - –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è\n"
        "/unsubscribe - –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π"
    )
    await message.answer(
        help_text,
        reply_markup=main_menu()
    )


@router.message(F.text == "/unsubscribe")
async def cmd_unsubscribe(message: Message):
    user_id = message.from_user.id
    if user_id in user_data.get('subscribers', {}):
        del user_data['subscribers'][user_id]
        await message.answer(
            "‚ùå –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π",
            reply_markup=main_menu()
        )
    else:
        await message.answer(
            "‚ÑπÔ∏è –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è",
            reply_markup=main_menu()
        )